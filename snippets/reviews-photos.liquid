{% comment %}
  ⚡ REVIEWS-PHOTOS.LIQUID - VERSÃO OTIMIZADA PARA PERFORMANCE
  
  OTIMIZAÇÕES APLICADAS:
  - Intersection Observer (só carrega quando visível)
  - Lazy loading agressivo (loading="lazy" + data-src)
  - srcset otimizado com Shopify image filters
  - Skeleton placeholder (zero CLS)
  - CSS Grid com contain
  - Touch-optimized (48px target)
  - Passive event listeners
  - Will-change apenas quando necessário
  - JavaScript minificado e eficiente
  
  Uso: {% render 'reviews-photos', product: product %}
{% endcomment %}

{%- liquid
  # "Cache metafields - 1x access"
  assign reviews_data = product.metafields.reviews.all_reviews.value
  assign fake_total = product.metafields.custom.total_de_avaliacoes.value | default: product.metafields.reviews.total_count.value
  
  # "Early exit se não tiver dados"
  if reviews_data == blank or fake_total == blank or fake_total == 0
    break
  endif
  
  # "Parse reviews"
  assign reviews = reviews_data | parse_json
  
  # "Coleta fotos (loop otimizado)"
  assign photos = ''
  assign photo_count = 0
  
  for review in reviews
    if review.photo_url != blank and photo_count < 4
      unless forloop.first
        assign photos = photos | append: ','
      endunless
      assign photos = photos | append: review.photo_url
      assign photo_count = photo_count | plus: 1
    endif
    if photo_count >= 4
      break
    endif
  endfor
  
  assign photo_array = photos | split: ','
-%}

{%- if photo_array.size > 0 -%}
  <div class="rp" data-rp-lazy>
    <button 
      type="button"
      class="rp__btn" 
      data-scroll-to="reviews-section"
      aria-label="Ver {{ fake_total }} avaliações com fotos"
    >
      <div class="rp__h">
        <span class="rp__title">Avaliações ({{ fake_total }})</span>
        <div class="rp__stars" aria-hidden="true">
          <svg width="16" height="16" fill="currentColor"><use href="#star-icon"/></svg>
          <svg width="16" height="16" fill="currentColor"><use href="#star-icon"/></svg>
          <svg width="16" height="16" fill="currentColor"><use href="#star-icon"/></svg>
          <svg width="16" height="16" fill="currentColor"><use href="#star-icon"/></svg>
          <svg width="16" height="16" fill="currentColor"><use href="#star-icon"/></svg>
        </div>
        <svg class="rp__arrow" width="16" height="16" fill="none" stroke="currentColor" stroke-width="2" aria-hidden="true">
          <polyline points="9,18 15,12 9,6"/>
        </svg>
      </div>
      
      <div class="rp__grid">
        {%- for photo in photo_array -%}
          <div class="rp__item">
            {%- comment -%} Skeleton placeholder {%- endcomment -%}
            <div class="rp__skeleton"></div>
            {%- comment -%} Image com lazy loading {%- endcomment -%}
            <img 
              data-src="{{ photo }}"
              alt="Avaliação {{ forloop.index }}"
              width="72"
              height="72"
              loading="lazy"
              decoding="async"
              class="rp__img"
            >
          </div>
        {%- endfor -%}
      </div>
    </button>
  </div>

  {%- comment -%} CSS CRÍTICO - Inline minificado {%- endcomment -%}
  <style>
.rp{margin:16px 0;contain:layout style paint}@media(max-width:767px){.rp{margin:12px -20px 16px;border-radius:0}}.rp__btn{width:100%;background:#f8f8f8;border:0;border-radius:8px;padding:16px 20px;cursor:pointer;transition:background .2s;touch-action:manipulation;text-align:left;-webkit-tap-highlight-color:transparent}@media(max-width:767px){.rp__btn{border-radius:0}}.rp__btn:active{background:#f0f0f0}.rp__h{display:flex;align-items:center;justify-content:space-between;margin-bottom:12px}.rp__title{font-size:15px;font-weight:600;color:#7a7a7a;margin:0}.rp__stars{display:flex;gap:1px;color:#F2C832;margin-right:auto;margin-left:8px}.rp__arrow{color:#666;flex-shrink:0}.rp__grid{display:grid;grid-template-columns:repeat(4,72px);gap:8px;overflow-x:auto;scroll-behavior:smooth;-webkit-overflow-scrolling:touch;padding-bottom:4px}.rp__grid::-webkit-scrollbar{height:3px}.rp__grid::-webkit-scrollbar-track{background:0 0}.rp__grid::-webkit-scrollbar-thumb{background:#ddd;border-radius:3px}.rp__item{position:relative;width:72px;height:72px;border-radius:6px;overflow:hidden;background:#fff;flex-shrink:0}.rp__skeleton{position:absolute;inset:0;background:linear-gradient(90deg,#f0f0f0 25%,#e0e0e0 50%,#f0f0f0 75%);background-size:200% 100%;animation:rp-shimmer 1.5s infinite}.rp__img{width:100%;height:100%;object-fit:cover;opacity:0;transition:opacity .3s}.rp__img.rp-loaded{opacity:1}@keyframes rp-shimmer{0%{background-position:200% 0}to{background-position:-200% 0}}@media(min-width:768px){.rp__btn:hover{background:#f0f0f0}}
  </style>

  {%- comment -%} JavaScript OTIMIZADO - Intersection Observer + Lazy Load {%- endcomment -%}
  <script>
(function(){const c=document.querySelector('[data-rp-lazy]');if(!c)return;const b=c.querySelector('.rp__btn'),imgs=c.querySelectorAll('.rp__img');let loaded=false;const loadImages=()=>{if(loaded)return;loaded=true;imgs.forEach(img=>{const src=img.dataset.src;if(src){img.src=src;img.onload=()=>{img.classList.add('rp-loaded');const sk=img.previousElementSibling;if(sk)sk.style.display='none'}}})};if('IntersectionObserver' in window){const obs=new IntersectionObserver((entries)=>{entries.forEach(e=>{if(e.isIntersecting){loadImages();obs.disconnect()}})},{rootMargin:'50px'});obs.observe(c)}else{loadImages()}b.addEventListener('click',function(e){e.preventDefault();const t=document.getElementById(this.dataset.scrollTo);if(t){t.scrollIntoView({behavior:'smooth',block:'start'});t.setAttribute('tabindex','-1');t.focus()}},{passive:false})})();
  </script>
{%- endif -%}